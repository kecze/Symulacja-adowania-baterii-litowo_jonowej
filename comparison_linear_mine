import matplotlib.pyplot as plt


def plot(x, y, z):
    plt.subplot(2, 1, 1)
    plt.plot(x, y)
    plt.xlabel('time [min]')
    plt.ylabel('power [kW]')
    plt.subplot(2, 1, 2)
    plt.plot(x, z)
    plt.xlabel('time [min]')
    plt.ylabel('SOC [%]')


def charging(soc, full_cap, power, ch_time):
    act_cap = soc/100 * full_cap
    beg_cap = act_cap
    time = 0
    x, y, z = [], [], []
    while act_cap <= 0.8 * full_cap and time < ch_time:
        pow_used = power
        act_cap += pow_used * 1 / 60
        time += 1
        soc_v = (act_cap / full_cap) * 100
        x.append(time)
        y.append(pow_used)
        z.append(act_cap/full_cap * 100)
    while 0.8 * full_cap <= act_cap <= 1 * full_cap and time < ch_time and round(soc_v) != 100:
        soc_v = (act_cap / full_cap) * 100
        pow_used = power * (0.005333 * soc_v ** 3 - 1.306 * soc_v ** 2 + 100.4 * soc_v - 2306) / 100
        act_cap += pow_used * 1 / 60
        time += 1
        x.append(time)
        y.append(pow_used)
        z.append(act_cap / full_cap * 100)
    plot(x, y, z)
    print("NEW - after", time, "minutes SOC is", round(soc_v), "%, capacity recharged =", round(act_cap - beg_cap), "kWh")


def prev_charging(soc, full_cap, power, ch_time):
    act_cap = soc / 100 * full_cap
    beg_cap = act_cap
    time = 0
    x, y, z = [], [], []
    while act_cap < full_cap and time <= ch_time:
        act_cap += power * 1/60
        time += 1
        x.append(time)
        y.append(power)
        z.append(act_cap / full_cap * 100)
    soc_v = round(act_cap) / full_cap * 100
    print("OLD - after", time, "minutes SOC is", round(soc_v), "%, capacity recharged =", round(act_cap - beg_cap), "kWh")
    plot(x, y, z)


def comparison(soc, full_cap, power, ch_time):
    charging(soc, full_cap, power, ch_time)
    prev_charging(soc, full_cap, power, ch_time)
    plt.show()


comparison(50, 62, 7.7, 360)
